import {session, Telegraf, Markup} from 'telegraf'
import { message } from 'telegraf/filters'
import timeout, {TimeoutError} from 'p-timeout'
import {code, link} from 'telegraf/format'
import config from 'config'
import { ogg } from './ogg.js'
import { removeFile } from './utils.js'
import {chatMidGen} from './apiMed.js'
import {kerDown} from "./imgdownloader.js";
import {chatMidGen2} from './apiMedGiveImg.js'
import {buttons} from './buttonsMid.js'
import {buttonsVVV} from './buttonsMidVVVV.js'
import {buttonGetId} from './getButtonId.js'
import { initCommand, newChatKer, chatGen, transcription, generateIamge, INITIAL_SESSION } from './openai.js'
import path, {dirname, resolve} from "path";
import {fileURLToPath} from "url";
import fs, {createWriteStream} from "fs";
import axios from "axios";
import postgres from 'postgres'
const __dirname = dirname(fileURLToPath(import.meta.url))

const client = postgres('postgres://ksepissj:M8KoCbUXeX5NRLIJqvJ-WTJssfWVZvVH@mahmud.db.elephantsql.com/ksepissj',{
    host: "mahmud.db.elephantsql.com",
    port: 5432,
    database: "ksepissj",
    user: "ksepissj",
    password: "M8KoCbUXeX5NRLIJqvJ-WTJssfWVZvVH",
})

await client`
  CREATE TABLE IF NOT EXISTS usersAiBot(
  id serial PRIMARY KEY,
  user_id int,
  date_buy TIMESTAMP,
  date_ending TIMESTAMP,
  count_tokens int,
  count_queries int,
  tarif_plan text
  )
`

const bot = new Telegraf(config.get('TELEGRAM_TOKEN'))

// –≥–æ–≤–æ—Ä–∏–º –±–æ—Ç—É, —á—Ç–æ–±—ã –æ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª session
bot.use(session())

// –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–º–∞–Ω–¥—ã new –∏ start –±–æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É,
// –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å
bot.command('start', initCommand)

let cpt = "Images are numbered from left to right, then from top to bottom\n" +
    "\n" +
    "U-Upscale\n" +
    "\n" +
    "V - Variations\n" +
    "\n" +
    "üîÑ - New query\n" +
    "\n" +
    "Reset - back to prompt"
let msgId = null;

bot.on(message('text'), async (ctx) => {

        const keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        const tmp = ctx.message.text

        const cnt = 1
        const msg_id = ctx.message.from.id;
        try {
            const data = await client`SELECT COUNT(*) FROM usersAiBot where user_id = ${msg_id}`
            if(data[0]["count"] == 1){
                const currentDate = new Date();
                const values_now = [currentDate]
                const data1 = await client`SELECT COUNT(*) FROM usersAiBot where user_id = ${msg_id} and ${values_now} <= date_ending`
                if(data1[0]["count"] == 1){
                    const data2 = await client`SELECT COUNT(*) FROM usersAiBot where user_id = ${msg_id} and ${values_now} <= date_ending and ${cnt} <= count_queries`
                    if(data2[0]["count"] == 1) {

                        await ctx.reply(code('–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è–ª. –ñ–¥—É –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞...'))
                        try {

                            msgId = await chatMidGen(ctx, tmp);

                            await ctx.reply("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
                            console.log(msgId);

                            let imageUr = await chatMidGen2(ctx, msgId);
                            await kerDown(imageUr, msgId);

                            //await ctx.replyWithPhoto({ source: `img/${msgId}.png` },   Extra.markup(keyboard ));
                            await ctx.telegram.sendPhoto(ctx.message.chat.id, {
                                source: `img/${msgId}.png`,
                                caption: cpt,
                                reply_markup: keyboard
                            })

                            await ctx.reply(tmp);
                            await client`UPDATE usersAiBot SET count_queries = count_queries - ${cnt} WHERE user_id = ${msg_id}`;
                        } catch (e) {
                            if (e instanceof TimeoutError) {
                                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
                                console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
                                await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
                            } else {
                                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
                                console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
                                await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
                            }
                        }
                    }else {
                        const data = await client`SELECT * FROM usersAiBot where user_id = ${ctx.from.id}`
                        await ctx.reply(code('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!\n–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!'))
                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ
                        await ctx.reply(`üîπ –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: ${data[0]["tarif_plan"]}\n` +
                            `üîπ –°–µ–≥–æ–¥–Ω—è –¢–æ–∫–µ–Ω–æ–≤ ChatGPT –æ—Å—Ç–∞–ª–æ—Å—å: ${data[0]["count_tokens"]} \n` +
                            `üîπ –°–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å ${data[0]["count_queries"]} –∑–∞–ø—Ä–æ—Å–∞ Midjorney\n` +
                            `\n` +
                            `–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî ${data[0]["date_ending"]}\n` +
                            '\n' +
                            '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: \n' +
                            '–í–∞—à–∞ —Å—Å—ã–ª–∫–∞: 0\n' +
                            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0', {
                            reply_markup: {
                                inline_keyboard: [
                                    [
                                        {
                                            text: '–û—Ñ–æ—Ä–º–∏—Ç—å/–ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
                                            url: "https://t.me/BotForHackatonbot"
                                        }
                                    ]
                                ]
                            }
                        });
                    }

                }
                else{
                    const data = await client`SELECT * FROM usersAiBot where user_id = ${ctx.from.id}`
                    await ctx.reply(code('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!\n–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!'))
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ
                    await ctx.reply(`üîπ –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: ${data[0]["tarif_plan"]}\n` +
                        `üîπ –°–µ–≥–æ–¥–Ω—è –¢–æ–∫–µ–Ω–æ–≤ ChatGPT –æ—Å—Ç–∞–ª–æ—Å—å: ${data[0]["count_tokens"]} \n` +
                        `üîπ –°–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å ${data[0]["count_queries"]} –∑–∞–ø—Ä–æ—Å–∞ Midjorney\n` +
                        `\n` +
                        `–û–∫–æ–Ω—á–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî ${data[0]["date_ending"]}\n` +
                        '\n' +
                        '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞: \n' +
                        '–í–∞—à–∞ —Å—Å—ã–ª–∫–∞: 0\n' +
                        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: 0', {
                        reply_markup: {
                            inline_keyboard: [
                                [
                                    {
                                        text: '–û—Ñ–æ—Ä–º–∏—Ç—å/–ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É',
                                        url: "https://t.me/BotForHackatonbot"
                                    }
                                ]
                            ]
                        }
                    });

                }
            }
        } catch (e){
            await ctx.reply(code("–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ!"))
            console.log(`Error while image message`, e.message)
        }

})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('U1', async (ctx) => {
    try {
        await ctx.reply('U1');
        let buttonId = await buttonGetId(ctx, msgId);
        //U1
        console.log(buttonId)
        let U1 = await buttons(ctx, "U1", buttonId);
        console.log(U1)
        await kerDown(U1, `${buttonId}U1`);
        await ctx.replyWithDocument({ source: `img/${buttonId}U1.png`});
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('U2', async(ctx) => {
    try {
        await ctx.reply('U2');
        let buttonId = await buttonGetId(ctx, msgId);
        //U2
        console.log(buttonId)
        let U2 = await buttons(ctx, "U2", buttonId);
        console.log(U2)
        await kerDown(U2, `${buttonId}U2`);
        await ctx.replyWithDocument({source: `img/${buttonId}U2.png`});
    }catch(e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('U3', async(ctx) => {
    try {
        await ctx.reply('U3');
        let buttonId = await buttonGetId(ctx, msgId);
        //U1
        console.log(buttonId)
        let U3 = await buttons(ctx, "U3", buttonId);
        console.log(U3)
        await kerDown(U3, `${buttonId}U3`);
        await ctx.replyWithDocument({source: `img/${buttonId}U3.png`});
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('U4', async(ctx) => {
    try {
        await ctx.reply('U4');
        let buttonId = await buttonGetId(ctx, msgId);
        //U1
        console.log(buttonId)
        let U4 = await buttons(ctx, "U4", buttonId);
        console.log(U4)
        await kerDown(U4, `${buttonId}U4`);
        await ctx.replyWithDocument({source: `img/${buttonId}U4.png`});
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('V1', async(ctx) => {
    try {
        await ctx.reply('V1');

        let keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        let buttonId = await buttonGetId(ctx, msgId);

        msgId = await buttonsVVV(ctx, "V1", buttonId);
        await bot.telegram.sendPhoto(ctx.chat.id, {source: `img/${buttonId}V1.png`, caption: cpt}, keyboard)
        console.log(msgId);
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('V2', async(ctx) => {
    try {
        await ctx.reply('V2');

        let keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        let buttonId = await buttonGetId(ctx, msgId);

        msgId = await buttonsVVV(ctx, "V2", buttonId);
        await bot.telegram.sendPhoto(ctx.chat.id, {source: `img/${buttonId}V2.png`, caption: cpt}, keyboard)
        console.log(msgId);
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('V3', async(ctx) => {
    try {
        await ctx.reply('V3');

        let keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        let buttonId = await buttonGetId(ctx, msgId);

        msgId = await buttonsVVV(ctx, "V3", buttonId);
        await bot.telegram.sendPhoto(ctx.chat.id, {source: `img/${buttonId}V3.png`, caption: cpt}, keyboard)
        console.log(msgId);
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
await bot.action('V4', async(ctx) => {
    try {
        await ctx.reply('V4');

        let keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        let buttonId = await buttonGetId(ctx, msgId);

        ///let V4 = await buttonsVVV(ctx, "V4", buttonId);
        msgId = await buttonsVVV(ctx, "V4", buttonId);
        await bot.telegram.sendPhoto(ctx.chat.id, {source: `img/${buttonId}V4.png`, caption: cpt}, keyboard)
        console.log(msgId);
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

await bot.action('button7', async(ctx) => {
    try {
        await ctx.reply('üîÑ');

        let keyboard = Markup.inlineKeyboard([
            [
                Markup.button.callback('U1', 'U1'),
                Markup.button.callback('U2', 'U2'),
                Markup.button.callback('U3', 'U3'),
                Markup.button.callback('U4', 'U4'),
            ],
            [
                Markup.button.callback('V1', 'V1'),
                Markup.button.callback('V2', 'V2'),
                Markup.button.callback('V3', 'V3'),
                Markup.button.callback('V4', 'V4')
            ],
            [
                Markup.button.callback('üîÑ', 'button7'),
            ]
        ]);

        let buttonId = await buttonGetId(ctx, msgId);

        ///let V4 = await buttonsVVV(ctx, "V4", buttonId);
        msgId = await buttonsVVV(ctx, "üîÑ", buttonId);
        await bot.telegram.sendPhoto(ctx.chat.id, {source: `img/${buttonId}üîÑ.png`, caption: cpt}, keyboard)
        console.log(msgId);
    }catch (e){
        if (e instanceof TimeoutError) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ TimeoutError
            console.log("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–≤—ã—Å–∏–ª–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ");
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        } else {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
            console.log("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e);
            await ctx.telegram.sendMessage(ctx.chat.id, "–ú–∏–¥–ñ–µ—Ä–Ω–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∂–µ!")
        }
    }
});

bot.launch()

